name: Continuous Integration

on:
  pull_request:
  merge_group:
  push:
    branches: [ master, dev ]

jobs:
  msrv:
    name: Build with MSRV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Get current MSRV from Cargo.toml
        id: current_msrv
        run: |
          msrv=$(cat Cargo.toml | grep rust-version | sed 's/.* = "//; s/"//')
          echo "msrv=$msrv" >> $GITHUB_OUTPUT
      - name: Setup Rust version
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{steps.current_msrv.outputs.msrv}}
      - uses: Swatinem/rust-cache@v2.7.3
      - uses: taiki-e/install-action@v2
        with:
          tool: cargo-hack
      - name: Build
        run: cargo hack build --each-feature --keep-going

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        cargo-cmd:
          - test --all-features
          - test --no-default-features
    steps:
      - uses: actions/checkout@v4
      - name: Enable Docker Remote API on Localhost
        shell: bash
        run: |
          sudo mkdir -p /etc/systemd/system/docker.service.d/
          sudo cp ./.github/docker.override.conf /etc/systemd/system/docker.service.d/override.conf
          sudo systemctl daemon-reload
          sudo systemctl restart docker
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2.7.3
      - run: cargo ${{ matrix['cargo-cmd'] }}

  style:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt
      - uses: dprint/check@v2.2

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v2.7.3
      - run: cargo clippy --all-targets -- -D warnings

  prlint:
    name: PR name check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: CondeNast/conventional-pull-request-action@v0.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # For PRs we gonna use squash-strategy, so commits names not so matter
          ignoreCommits: "true"
